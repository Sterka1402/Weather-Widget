(()=>{"use strict";const e=function(e){const n=document.querySelector(".current-weather");if(!n)return;const t=e.list[0].weather[0].icon;n.innerHTML=`\n  <img src='../img/${t}.png'></img>\n  <p>${e.city.name}, ${e.city.country}</p>\n  <h4>${e.list[0].main.temp} °C </h4>\n  <p>Feels like ${e.list[0].main.feels_like} °C<p>\n  <p> Wind now is ${Math.floor(e.list[0].wind.speed)} m/s.</p>\n  `,function(e){const n=document.querySelector(".forecast-weather");n&&e.list.forEach((e=>{if("12"===e.dt_txt.slice(11,13)){const t=document.createElement("div");t.innerHTML=`\n        <div>${e.dt_txt}</div>\n        <div><img src='../img/${e.weather[0].icon}.png'></img></div>\n        <div>${Math.floor(10*e.main.temp)/10} °C </div>\n      `,n.append(t)}}))}(e)};window.addEventListener("load",(()=>{new Promise(((e,n)=>{const t=new XMLHttpRequest;t.open("GET","https://api.openweathermap.org/data/2.5/forecast?q=Mogilev,by&units=metric&appid=4bed3ee902539e73a03dc1243f44bff9",!0),t.send(),t.onload=()=>{if(200!==t.status)n(new Error("Error occured"));else{const n=t.response,o=JSON.parse(n);console.log(o),e(o)}},t.onerror=()=>{n(new Error("Network error"))}})).then((n=>e(n))).catch((e=>console.log(e))).finally((()=>console.log("Promise is fullfiled")))}))})();